int[‍] t = new int[‍] { 4, 7, 6, 3, 2, 1, 8, 5 };
t[7] = 8;
int[‍] u = t;
u[0] = 5;
System.out.println(t[0] + " " + u[7]);

int[‍][‍] t = new int[‍][‍] { { 4, 7 }, { 6, 3 }, { 2, 1, 8 }, { 5 } };
t[3] = t[1];
t[1][0] = 3;
t[3][1] = 8;
System.out.println(t[3][0] + " " + t[1][1]);

public static void incremente(int x, int y) {
  x = x + y;
  System.out.print(" " + x + " ");
}

int x = 2;
System.out.print(x);
incremente(x, 4);
System.out.print(x);
incremente(x, 4);
System.out.print(x);

public static void echange(int[‍] a, int[‍] b) {
  a[0] = 7;
  int[‍] u = a;
  a = b;
  b = u;
  a[1] = 2;
}

int[‍][‍] tt = new int[‍][‍] { { 4, 7 }, { 6, 3 }, { 2, 1 }, { 8, 5 } };
echange(tt[3], tt[0]);
System.out.println(tt[3][0] + " " + tt[3][1] + " " + tt[0][0] + " " + tt[0][1]);

public class D {
  public static int i = 7;
  private int j‍;
  public D(int a, int b) {
    i = a;
    this.j = b‍;
  }
  public static int getI() {
    return i‍;
  }
  public int getIJ() {
    return i * this.j‍;
  }
}

D d1 = new D(1‍,‍8);
D d2 = new D(5‍,‍2);
System.out.println(D.getI(‍) + " " + d1.getIJ‍() + " " + d2.getIJ(‍));

public class P {
  public int‍ a;
  public int‍ b;
  public P(int‍ x, int‍ y) {
    this.a = x;
    this.b = y;
  }
}

int‍ x = 2;
P‍ p1 = new P(x, 7);
x = 6;
P‍ p2 = new P(x, 1);
P‍ p3 = p1;
p1.b = 8;
p2 = p1;
p1.b = 4;
System.out.println(p1.a + " " + p1.b + " " + p2.a + " " + p2.b + " " + p3.a + " " + p3.b);

public class C {
   public int a;
   public int b;
   public C(int x, int y) {
      this.a = x;
      this.b = y;
   }
}

public static void echange(C c1, C c2) {
   c1.a = 5;
   C c3 = c1;
   c1 = c2;
   c2 = c3;
   c1.b = 4;
}

C[‍] t = new C[‍] { new C(6‍,‍5), new C(8‍,‍7), new C(2‍,‍3), new C(4‍,‍1) };
echange(t[2], t[0]);
System.out.println(t[2].a + " " + t[2].b + " " + t[0].a + " " + t[0].b);

class OO {
  public String s;
  public OO(String s) {
    this.s = s;
  }
  public String toString() {
    return this.s;
  }
  public boolean equals(OO o) {
    return ...
  }
}




